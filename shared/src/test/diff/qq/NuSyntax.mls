:NewDefs
:NoJS

`42
//│ Code[42, nothing]

x `=> x
//│ Code[forall 'a. 'a -> 'a, nothing]

x `=>
  x
//│ Code[forall 'a. 'a -> 'a, nothing]

run(x `=> x)(42)
//│ 42

`1 `+ `1
//│ Code[Int, nothing]

`(1 + 1)
//│ Code[Int, nothing]


`1 `< `2
//│ Code[Bool, nothing]

`1 `<= `2
//│ Code[Bool, nothing]

`1 `* `2 `+ `3
//│ Code[Int, nothing]

x `=> x `+ `1
//│ Code[Int -> Int, nothing]

y `=> `0 `- y
//│ Code[Int -> Int, nothing]

:e
z `=> z + 1
//│ ╔══[ERROR] Type mismatch in operator application:
//│ ║  l.40: 	z `=> z + 1
//│ ║        	      ^^^^^
//│ ╙── expression of type `Code[?a, ?z]` is not an instance of `Int`
//│ ╔══[ERROR] Type mismatch in unquote:
//│ ║  l.40: 	z `=> z + 1
//│ ║        	      ^^^^^
//│ ╙── operator application of type `Int` is not an instance of `Code[?a, ?z | ?b]`
//│ Code[anything -> error, nothing]


(x, y) `=> x `+ y
//│ Code[(Int, Int) -> Int, nothing]

run((x, y) `=> x `+ y)(1, 2)
//│ Int


`let x = `42 in x `+ `1
//│ Code[Int, nothing]


fun f(x: Code[Int, nothing]) =
  `let t = x in t
//│ fun f: (x: Code[Int, nothing]) -> Code[Int, nothing]

:e
`let x = `0, y = 1 in x `+ y
//│ ╔══[ERROR] Type mismatch in unquote:
//│ ║  l.68: 	`let x = `0, y = 1 in x `+ y
//│ ║        	                 ^
//│ ╙── integer literal of type `1` is not an instance of type `Code`
//│ Code[Int, nothing]


f `=> a `=> f`(a)
//│ Code[forall 'a 'b. ('b -> 'a) -> 'b -> 'a, nothing]

`let app = (f, a) `=> f`(a), id = x `=> x in app`(id, `42)
//│ Code[42, nothing]


`if `(1 == 1) then `1 else `2
//│ Code[1 | 2, nothing]

fun foo(x) =
  `if x `== `1 then `1 else `2
//│ fun foo: forall 'a. Code[Num, 'a] -> Code[1 | 2, 'a]

fun foo(x) =
  `if `(1 == 1) then x else `2
//│ fun foo: forall 'a 'b. Code['a, 'b] -> Code[2 | 'a, 'b]

// `if `1 `< `2 then `0 else `1


:pe
`(`42)
//│ ╔══[PARSE ERROR] Unexpected quote in expression position
//│ ║  l.98: 	`(`42)
//│ ╙──      	  ^
//│ Code[42, nothing]

:pe
:e
`(x `=> x)
//│ ╔══[PARSE ERROR] Unexpected quote here
//│ ║  l.106: 	`(x `=> x)
//│ ╙──       	    ^
//│ ╔══[ERROR] identifier not found: x
//│ ║  l.106: 	`(x `=> x)
//│ ╙──       	  ^
//│ Code[error, nothing]
